#!/usr/bin/lua 
package.path = "./modules/?.lua;"..package.path
local mm = require "mm"
local Parser = require "parser"
local Ruleset = require "ruleset"
local Binding = require "binding"
local inspect = require "inspect"

Ruleset.uniqueName = function(thing, thingtbl, ruleset)
  local name
  if ruleset then
    if not ruleset.__n then
      ruleset.__n = 0
    else
      ruleset.__n = ruleset.__n + 1
    end
    name = ("%s%i"):format(thing, ruleset.__n)
  else
    assert(thing == "ruleset")
    name = "ruleset0"
  end
  
  if type(thingcheck) == thingtbl[name] then --oh no it's not unique. try again
    return self:uniqueName(thing, thingtbl, ruleset)
  else
    return name
  end
end

local p = Parser.new()

local parsed = p:parseFile("../../../dev/testruleset.json")

--mm(parsed)

local rs = Ruleset.new(parsed)

mm(rs.rules)

print(rs:toJSON())
