#!/usr/bin/env ruby
MINIFY_MODULES = true
require "pry"
scriptf = <<EOS
--[[autogenerated script, do not edit]] local require, module; local function main() %s
end
do
  local modules = {}
  module = function(name, fn) modules[name]=fn() end
  require = function(name) return modules[name] end
end
--luacheck: ignore

%s

return main()
EOS

modulef = <<EOS
module("%s", function()
%s
end)
EOS

throw "need more args" if ARGV.count == 0

main = IO.read(ARGV.shift).lines.map{|l| "  #{l}"}.join

if MINIFY_MODULES
  can_minify = true
  begin
    `luamin -h`
  rescue Errno::ENOENT => e
    #luamin not found
    can_minify = false
  end
end

modules = []
ARGV.each do |mf|
  
  if MINIFY_MODULES && can_minify
    module_src = `luamin -f #{mf}`
  else
    module_src = IO.read(mf).lines.map{|l| "  #{l}"}.join
  end
  module_name = File.basename mf, ".lua"
  
  modules.push sprintf(modulef, module_name, module_src)
end

printf scriptf, main, modules.join("\n") 
